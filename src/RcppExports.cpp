// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cas_lineadapt
DataFrame cas_lineadapt(DataFrame df, int sep_len);
RcppExport SEXP _telemac_cas_lineadapt(SEXP dfSEXP, SEXP sep_lenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type sep_len(sep_lenSEXP);
    rcpp_result_gen = Rcpp::wrap(cas_lineadapt(df, sep_len));
    return rcpp_result_gen;
END_RCPP
}
// find_ikle
IntegerMatrix find_ikle(NumericMatrix T, NumericMatrix P);
RcppExport SEXP _telemac_find_ikle(SEXP TSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(find_ikle(T, P));
    return rcpp_result_gen;
END_RCPP
}
// find_ipobo
IntegerVector find_ipobo(IntegerMatrix ikle, NumericVector x, NumericVector y);
RcppExport SEXP _telemac_find_ipobo(SEXP ikleSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type ikle(ikleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(find_ipobo(ikle, x, y));
    return rcpp_result_gen;
END_RCPP
}
// get_edges
arma::Mat<int> get_edges(arma::Mat<int> ikle);
RcppExport SEXP _telemac_get_edges(SEXP ikleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Mat<int> >::type ikle(ikleSEXP);
    rcpp_result_gen = Rcpp::wrap(get_edges(ikle));
    return rcpp_result_gen;
END_RCPP
}
// interpol_grd
NumericMatrix interpol_grd(NumericVector x, NumericVector y, NumericVector z, IntegerMatrix ikle, NumericVector xgrd, NumericVector ygrd, NumericMatrix grd);
RcppExport SEXP _telemac_interpol_grd(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP ikleSEXP, SEXP xgrdSEXP, SEXP ygrdSEXP, SEXP grdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ikle(ikleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xgrd(xgrdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ygrd(ygrdSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type grd(grdSEXP);
    rcpp_result_gen = Rcpp::wrap(interpol_grd(x, y, z, ikle, xgrd, ygrd, grd));
    return rcpp_result_gen;
END_RCPP
}
// line_seg_adapt
DataFrame line_seg_adapt(NumericVector x, NumericVector y, double s);
RcppExport SEXP _telemac_line_seg_adapt(SEXP xSEXP, SEXP ySEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(line_seg_adapt(x, y, s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_telemac_cas_lineadapt", (DL_FUNC) &_telemac_cas_lineadapt, 2},
    {"_telemac_find_ikle", (DL_FUNC) &_telemac_find_ikle, 2},
    {"_telemac_find_ipobo", (DL_FUNC) &_telemac_find_ipobo, 3},
    {"_telemac_get_edges", (DL_FUNC) &_telemac_get_edges, 1},
    {"_telemac_interpol_grd", (DL_FUNC) &_telemac_interpol_grd, 7},
    {"_telemac_line_seg_adapt", (DL_FUNC) &_telemac_line_seg_adapt, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_telemac(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
